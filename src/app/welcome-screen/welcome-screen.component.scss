@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@1,600&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Lato&display=swap');  

$cyan: #6FB3B8;
$blue: #BADFE7;

.container {
    width: 100%;
    margin: 0;
    position: absolute;
    top: 50%;
    left: 50%;
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    text-align: center;

    h1 {
        margin: 10%;
        font-family: 'Playfair Display', serif;
        font-size: 7vmax;
        color: $cyan;
        animation: fadeIn ease 2s;
        -webkit-animation: fadeIn ease 2s;
        -moz-animation: fadeIn ease 2s;
        -o-animation: fadeIn ease 2s;
        -ms-animation: fadeIn ease 2s;
    }

    @keyframes fadeIn {
        0% {opacity:0;}
        100% {opacity:1;}
      }
      
      @-moz-keyframes fadeIn {
        0% {opacity:0;}
        100% {opacity:1;}
      }
      
      @-webkit-keyframes fadeIn {
        0% {opacity:0;}
        100% {opacity:1;}
      }
      
      @-o-keyframes fadeIn {
        0% {opacity:0;}
        100% {opacity:1;}
      }
      
      @-ms-keyframes fadeIn {
        0% {opacity:0;}
        100% {opacity:1;}
      }

      h2 {
        font-family: 'Lato', sans-serif;
        font-size: 2vmax;
        color: $blue;
        animation: blinker 1.4s linear infinite;

        @keyframes blinker {
            50% {
              opacity: 0;
            }
          }
      }
}

/*
 * SHAPE STYLING BELOW
*/
$shape-count: 50;
$sway-type: "sway-left-to-right", "sway-right-to-left";

@function random_range($min, $max) {
    $rand: random();
    $random_range: $min + floor($rand * (($max - $min) + 1));
    @return $random_range;
}

@function sample($list) {
    @return nth($list, random(length($list)));
}

.shapes {
    position: relative;
    width: 100%;
    height: 100vh;
    overflow: hidden;
    background-color: #F8F8F8;
    cursor: pointer;
}

.shape {
    position: absolute;
    left: var(--shape-left-offset);
    bottom: -75%;
    display: block;
    width: var(--shape-radius);
    height: calc(var(--shape-radius) * 1.4);
    border-radius: 1em;
    animation: float-up var(--shape-float-duration) var(--shape-float-delay) ease-in infinite;

    &::before {
        position: absolute;
        content: '';
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: hsla(183, 94%, 76%, 0.3);
        border-radius: inherit;
        animation: var(--shape-sway-type) var(--shape-sway-duration) var(--shape-sway-delay) ease-in-out alternate infinite;
    }

    @for $i from 0 through $shape-count {
        &:nth-child(#{$i}) {
        --shape-left-offset: #{random_range(0vw, 100vw)};
        --shape-radius: #{random_range(1vw, 6vw)};
        --shape-float-duration: #{random_range(6s, 12s)};
        --shape-sway-duration: #{random_range(4s, 6s)};
        --shape-float-delay: #{random_range(0s, 3s)};
        --shape-sway-delay: #{random_range(0s, 4s)};
        --shape-sway-type: #{sample($sway-type)};
        }
    }
}

@keyframes float-up {
    to {
        transform: translateY(-175vh);
    }
}

@keyframes sway-left-to-right {
    from {
        transform: translateX(-100%);
    }

    to {
        transform: translateX(100%);
    }
}

@keyframes sway-right-to-left {
    from {
        transform: translateX(100%);
}

    to {
        transform: translateX(-100%);
    }
}